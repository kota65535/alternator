// Code generated by goyacc -l -o parser/parser.go parser/parser.go.y. DO NOT EDIT.
package parser

import __yyfmt__ "fmt"

import (
	"fmt"
	"github.com/imdario/mergo"
	"github.com/kota65535/alternator/lexer"
	"strings"
)

type yySymType struct {
	yys                        int
	empty                      struct{}
	statements                 []Statement
	statement                  Statement
	partitionDefinitionList    []PartitionDefinition
	subpartitionDefinitionList []SubpartitionDefinition
	keyPartList                []KeyPart
	list                       []interface{}
	item                       interface{}
	stringList                 []string
	stringItem                 string
	keyword                    bool
	token                      *lexer.Token
}

const AGAINST = 57346
const ALGORITHM = 57347
const ALWAYS = 57348
const AND = 57349
const AS = 57350
const ASC = 57351
const AUTOEXTENDED_SIZE = 57352
const AUTO_INCREMENT = 57353
const AVG_ROW_LENGTH = 57354
const BETWEEN = 57355
const BIGINT = 57356
const BINARY = 57357
const BIT = 57358
const BLOB = 57359
const BOOL = 57360
const BOOLEAN = 57361
const BY = 57362
const CASCADE = 57363
const CASE = 57364
const CHAR = 57365
const CHARACTER = 57366
const CHARSET = 57367
const CHECK = 57368
const CHECKSUM = 57369
const COLLATE = 57370
const COLUMNS = 57371
const COMMENT = 57372
const COMPRESSION = 57373
const CONNECTION = 57374
const CONSTRAINT = 57375
const CREATE = 57376
const CURRENT_DATE = 57377
const CURRENT_ROLE = 57378
const CURRENT_TIME = 57379
const CURRENT_TIMESTAMP = 57380
const CURRENT_USER = 57381
const DATA = 57382
const DATABASE = 57383
const DATE = 57384
const DATETIME = 57385
const DAY = 57386
const DAY_HOUR = 57387
const DAY_MICROSECOND = 57388
const DAY_MINUTE = 57389
const DAY_SECOND = 57390
const DEC = 57391
const DECIMAL = 57392
const DEFAULT = 57393
const DELAY_KEY_WRITE = 57394
const DELETE = 57395
const DESC = 57396
const DIRECTORY = 57397
const DIV = 57398
const DOUBLE = 57399
const ELSE = 57400
const ENCRYPTION = 57401
const END = 57402
const ENFORCED = 57403
const ENGINE = 57404
const ENGINE_ATTRIBUTE = 57405
const ENUM = 57406
const EXISTS = 57407
const EXPANSION = 57408
const EXPRESSION = 57409
const FALSE = 57410
const FIXED = 57411
const FLOAT = 57412
const FOREIGN = 57413
const FULLTEXT = 57414
const GENERATED = 57415
const GEOMETRY = 57416
const GEOMETRYCOLLECTION = 57417
const HASH = 57418
const HOUR = 57419
const HOUR_MICROSECOND = 57420
const HOUR_MINUTE = 57421
const HOUR_SECOND = 57422
const IF = 57423
const IN = 57424
const INDEX = 57425
const INSERT_METHOD = 57426
const INT = 57427
const INTEGER = 57428
const INTERVAL = 57429
const INVISIBLE = 57430
const IS = 57431
const JSON = 57432
const KEY = 57433
const KEY_BLOCK_SIZE = 57434
const LANGUAGE = 57435
const LESS = 57436
const LIKE = 57437
const LINEAR = 57438
const LINESTRING = 57439
const LIST = 57440
const LOCALTIME = 57441
const LOCALTIMESTAMP = 57442
const LONGBLOB = 57443
const LONGTEXT = 57444
const MATCH = 57445
const MAXVALUE = 57446
const MAX_ROWS = 57447
const MEDIUMBLOB = 57448
const MEDIUMINT = 57449
const MEDIUMTEXT = 57450
const MICROSECOND = 57451
const MINUS = 57452
const MINUTE = 57453
const MINUTE_MICROSECOND = 57454
const MINUTE_SECOND = 57455
const MIN_ROWS = 57456
const MOD = 57457
const MODE = 57458
const MONTH = 57459
const MULTILINESTRING = 57460
const MULTIPOINT = 57461
const MULTIPOLYGON = 57462
const NATURAL = 57463
const NOT = 57464
const NOT_ENFORCED = 57465
const NO_ACTION = 57466
const NULL = 57467
const ON = 57468
const OR = 57469
const PACK_KEYS = 57470
const PARSER = 57471
const PARTITION = 57472
const PARTITIONS = 57473
const PASSWORD = 57474
const PIPE = 57475
const PLUS = 57476
const POINT = 57477
const POLYGON = 57478
const PRIMARY = 57479
const QSTN = 57480
const QUARTER = 57481
const QUERY = 57482
const RANGE = 57483
const REAL = 57484
const REFERENCES = 57485
const REGEXP = 57486
const RESTRICT = 57487
const ROW = 57488
const ROW_FORMAT = 57489
const SCHEMA = 57490
const SECOND = 57491
const SECONDARY_ENGINE_ATTRIBUTE = 57492
const SECOND_MICROSECOND = 57493
const SET = 57494
const SMALLINT = 57495
const SOUNDS = 57496
const SRID = 57497
const STATS_AUTO_RECALC = 57498
const STATS_PERSISTENT = 57499
const STATS_SAMPLE_PAGES = 57500
const STORAGE = 57501
const STORED = 57502
const SUBPARTITION = 57503
const SUBPARTITIONS = 57504
const TABLE = 57505
const TABLESPACE = 57506
const TEMPORARY = 57507
const TEXT = 57508
const THAN = 57509
const THEN = 57510
const TIME = 57511
const TIMESTAMP = 57512
const TINYBLOB = 57513
const TINYINT = 57514
const TINYTEXT = 57515
const TRUE = 57516
const UNION = 57517
const UNIQUE = 57518
const UNKNOWN = 57519
const UNSIGNED = 57520
const UPDATE = 57521
const USE = 57522
const USING = 57523
const UTC_DATE = 57524
const UTC_TIME = 57525
const UTC_TIMESTAMP = 57526
const VALUES = 57527
const VARBINARY = 57528
const VARCHAR = 57529
const VIRTUAL = 57530
const VISIBLE = 57531
const WEEK = 57532
const WHEN = 57533
const WITH = 57534
const XOR = 57535
const YEAR = 57536
const YEAR_MONTH = 57537
const ZEROFILL = 57538
const lp = 57539
const rp = 57540
const lcb = 57541
const rcb = 57542
const comma = 57543
const semicolon = 57544
const eq = 57545
const dot = 57546
const gt = 57547
const gte = 57548
const lt = 57549
const lte = 57550
const ne = 57551
const ne2 = 57552
const nseq = 57553
const tilde = 57554
const and = 57555
const and2 = 57556
const or = 57557
const or2 = 57558
const rshift = 57559
const lshift = 57560
const plus = 57561
const minus = 57562
const mult = 57563
const div = 57564
const mod = 57565
const hat = 57566
const excl = 57567
const qstn = 57568
const BIT_STR = 57569
const BIT_NUM = 57570
const INT_NUM = 57571
const HEX_STR = 57572
const HEX_NUM = 57573
const FLOAT_NUM = 57574
const STRING = 57575
const IDENTIFIER = 57576
const LOCAL_VAR = 57577
const GLOBAL_VAR = 57578
const QUOTED_IDENTIFIER = 57579

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"AGAINST",
	"ALGORITHM",
	"ALWAYS",
	"AND",
	"AS",
	"ASC",
	"AUTOEXTENDED_SIZE",
	"AUTO_INCREMENT",
	"AVG_ROW_LENGTH",
	"BETWEEN",
	"BIGINT",
	"BINARY",
	"BIT",
	"BLOB",
	"BOOL",
	"BOOLEAN",
	"BY",
	"CASCADE",
	"CASE",
	"CHAR",
	"CHARACTER",
	"CHARSET",
	"CHECK",
	"CHECKSUM",
	"COLLATE",
	"COLUMNS",
	"COMMENT",
	"COMPRESSION",
	"CONNECTION",
	"CONSTRAINT",
	"CREATE",
	"CURRENT_DATE",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"DATA",
	"DATABASE",
	"DATE",
	"DATETIME",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DELAY_KEY_WRITE",
	"DELETE",
	"DESC",
	"DIRECTORY",
	"DIV",
	"DOUBLE",
	"ELSE",
	"ENCRYPTION",
	"END",
	"ENFORCED",
	"ENGINE",
	"ENGINE_ATTRIBUTE",
	"ENUM",
	"EXISTS",
	"EXPANSION",
	"EXPRESSION",
	"FALSE",
	"FIXED",
	"FLOAT",
	"FOREIGN",
	"FULLTEXT",
	"GENERATED",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"HASH",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"IF",
	"IN",
	"INDEX",
	"INSERT_METHOD",
	"INT",
	"INTEGER",
	"INTERVAL",
	"INVISIBLE",
	"IS",
	"JSON",
	"KEY",
	"KEY_BLOCK_SIZE",
	"LANGUAGE",
	"LESS",
	"LIKE",
	"LINEAR",
	"LINESTRING",
	"LIST",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LONGBLOB",
	"LONGTEXT",
	"MATCH",
	"MAXVALUE",
	"MAX_ROWS",
	"MEDIUMBLOB",
	"MEDIUMINT",
	"MEDIUMTEXT",
	"MICROSECOND",
	"MINUS",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MIN_ROWS",
	"MOD",
	"MODE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NATURAL",
	"NOT",
	"NOT_ENFORCED",
	"NO_ACTION",
	"NULL",
	"ON",
	"OR",
	"PACK_KEYS",
	"PARSER",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PIPE",
	"PLUS",
	"POINT",
	"POLYGON",
	"PRIMARY",
	"QSTN",
	"QUARTER",
	"QUERY",
	"RANGE",
	"REAL",
	"REFERENCES",
	"REGEXP",
	"RESTRICT",
	"ROW",
	"ROW_FORMAT",
	"SCHEMA",
	"SECOND",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECOND_MICROSECOND",
	"SET",
	"SMALLINT",
	"SOUNDS",
	"SRID",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"STORED",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"TABLE",
	"TABLESPACE",
	"TEMPORARY",
	"TEXT",
	"THAN",
	"THEN",
	"TIME",
	"TIMESTAMP",
	"TINYBLOB",
	"TINYINT",
	"TINYTEXT",
	"TRUE",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNSIGNED",
	"UPDATE",
	"USE",
	"USING",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"VALUES",
	"VARBINARY",
	"VARCHAR",
	"VIRTUAL",
	"VISIBLE",
	"WEEK",
	"WHEN",
	"WITH",
	"XOR",
	"YEAR",
	"YEAR_MONTH",
	"ZEROFILL",
	"lp",
	"rp",
	"lcb",
	"rcb",
	"comma",
	"semicolon",
	"eq",
	"dot",
	"gt",
	"gte",
	"lt",
	"lte",
	"ne",
	"ne2",
	"nseq",
	"tilde",
	"and",
	"and2",
	"or",
	"or2",
	"rshift",
	"lshift",
	"plus",
	"minus",
	"mult",
	"div",
	"mod",
	"hat",
	"excl",
	"qstn",
	"BIT_STR",
	"BIT_NUM",
	"INT_NUM",
	"HEX_STR",
	"HEX_NUM",
	"FLOAT_NUM",
	"STRING",
	"IDENTIFIER",
	"LOCAL_VAR",
	"GLOBAL_VAR",
	"QUOTED_IDENTIFIER",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

var yyExca = [...]int16{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 25,
	1, 9,
	202, 9,
	-2, 467,
	-1, 49,
	1, 236,
	202, 236,
	-2, 467,
	-1, 268,
	26, 168,
	-2, 33,
	-1, 431,
	9, 52,
	54, 52,
	198, 52,
	201, 52,
	-2, 376,
	-1, 433,
	233, 312,
	-2, 316,
	-1, 437,
	233, 310,
	-2, 348,
	-1, 439,
	13, 292,
	82, 292,
	95, 292,
	144, 292,
	-2, 361,
	-1, 541,
	233, 310,
	-2, 331,
	-1, 594,
	233, 310,
	-2, 331,
	-1, 602,
	233, 310,
	-2, 331,
	-1, 653,
	28, 391,
	-2, 372,
	-1, 655,
	28, 391,
	-2, 373,
}

const yyPrivate = 57344

const yyLast = 1709

var yyAct = [...]int16{
	490, 590, 750, 749, 438, 781, 698, 507, 15, 693,
	666, 440, 369, 279, 449, 620, 454, 265, 421, 277,
	15, 372, 430, 439, 636, 34, 565, 542, 351, 350,
	637, 409, 343, 33, 334, 301, 465, 441, 221, 420,
	44, 269, 118, 115, 123, 124, 16, 125, 122, 17,
	425, 374, 426, 129, 232, 238, 523, 43, 311, 114,
	735, 45, 788, 729, 662, 789, 730, 663, 538, 530,
	521, 539, 531, 520, 330, 8, 663, 503, 46, 47,
	502, 161, 533, 548, 162, 798, 764, 121, 376, 377,
	727, 710, 785, 515, 709, 708, 690, 776, 119, 126,
	721, 459, 266, 609, 605, 159, 120, 602, 548, 578,
	335, 303, 596, 594, 541, 394, 340, 222, 222, 383,
	135, 136, 137, 231, 138, 139, 140, 141, 501, 332,
	144, 145, 146, 147, 148, 149, 150, 151, 152, 153,
	154, 155, 156, 157, 158, 499, 160, 249, 329, 251,
	378, 379, 319, 42, 524, 257, 223, 237, 239, 240,
	241, 794, 725, 115, 742, 393, 247, 410, 580, 318,
	775, 252, 253, 254, 255, 21, 375, 707, 259, 260,
	261, 6, 11, 245, 246, 784, 494, 782, 348, 107,
	264, 242, 243, 244, 48, 292, 799, 248, 383, 250,
	767, 302, 235, 550, 699, 256, 293, 258, 537, 624,
	304, 305, 306, 307, 276, 309, 272, 364, 577, 314,
	315, 787, 766, 278, 23, 382, 222, 578, 550, 778,
	357, 763, 625, 548, 380, 381, 321, 322, 627, 323,
	324, 325, 326, 762, 548, 316, 546, 317, 367, 16,
	578, 647, 17, 746, 777, 713, 695, 349, 336, 390,
	389, 339, 20, 337, 338, 360, 568, 362, 567, 545,
	569, 570, 571, 572, 573, 579, 581, 576, 387, 386,
	238, 385, 384, 388, 333, 129, 580, 227, 800, 12,
	549, 547, 551, 34, 545, 667, 500, 358, 359, 797,
	548, 548, 779, 393, 382, 548, 13, 712, 32, 580,
	363, 293, 626, 498, 401, 549, 577, 551, 696, 276,
	395, 272, 368, 366, 765, 397, 392, 7, 278, 774,
	496, 342, 226, 230, 737, 143, 431, 432, 546, 341,
	222, 229, 489, 391, 400, 497, 491, 142, 566, 403,
	404, 416, 267, 550, 418, 411, 412, 413, 414, 415,
	320, 31, 417, 747, 550, 419, 398, 399, 548, 504,
	582, 407, 486, 487, 402, 548, 485, 405, 488, 408,
	308, 345, 310, 547, 568, 227, 567, 495, 569, 570,
	571, 572, 573, 579, 581, 576, 513, 644, 224, 357,
	50, 356, 313, 26, 505, 30, 756, 568, 236, 567,
	514, 569, 570, 571, 572, 573, 579, 581, 576, 545,
	550, 550, 548, 396, 793, 550, 508, 506, 536, 35,
	545, 516, 517, 36, 14, 518, 552, 228, 519, 535,
	549, 522, 551, 512, 355, 39, 40, 82, 69, 563,
	131, 549, 588, 551, 22, 82, 69, 583, 584, 585,
	586, 739, 19, 592, 593, 587, 643, 540, 525, 526,
	527, 528, 529, 2, 532, 578, 534, 612, 591, 645,
	664, 548, 18, 758, 24, 36, 545, 545, 550, 755,
	589, 545, 732, 39, 40, 550, 354, 37, 719, 225,
	613, 597, 615, 617, 535, 117, 116, 549, 549, 551,
	551, 295, 549, 275, 551, 274, 606, 614, 177, 616,
	623, 209, 207, 600, 608, 607, 598, 599, 646, 511,
	553, 68, 39, 40, 580, 548, 37, 754, 632, 68,
	431, 432, 550, 205, 548, 638, 639, 640, 291, 202,
	510, 9, 667, 630, 545, 631, 10, 509, 575, 642,
	574, 545, 633, 635, 544, 753, 704, 38, 634, 543,
	434, 444, 629, 757, 752, 549, 563, 551, 751, 61,
	641, 493, 549, 660, 551, 492, 234, 61, 653, 655,
	661, 648, 649, 650, 651, 652, 654, 656, 657, 658,
	659, 550, 233, 263, 262, 76, 287, 60, 545, 75,
	94, 700, 74, 703, 73, 60, 57, 535, 535, 689,
	691, 72, 71, 70, 57, 706, 66, 65, 701, 549,
	64, 551, 568, 623, 567, 705, 569, 570, 571, 572,
	573, 579, 581, 576, 555, 422, 556, 557, 558, 559,
	560, 561, 562, 702, 711, 550, 63, 716, 714, 28,
	62, 59, 58, 56, 550, 720, 53, 545, 715, 726,
	717, 718, 628, 52, 51, 694, 723, 622, 621, 424,
	423, 84, 282, 281, 280, 344, 312, 67, 549, 27,
	551, 87, 365, 271, 270, 67, 448, 29, 595, 427,
	731, 55, 728, 461, 84, 464, 466, 286, 463, 55,
	428, 456, 455, 761, 87, 734, 482, 483, 376, 377,
	481, 545, 468, 467, 733, 473, 618, 738, 442, 668,
	545, 54, 469, 554, 88, 601, 761, 740, 128, 54,
	743, 748, 549, 127, 551, 736, 724, 722, 665, 383,
	453, 549, 769, 551, 745, 744, 95, 88, 474, 772,
	452, 435, 478, 370, 373, 96, 371, 741, 462, 78,
	77, 328, 327, 331, 783, 361, 406, 611, 786, 95,
	378, 379, 610, 790, 460, 792, 791, 353, 96, 352,
	477, 347, 475, 346, 796, 795, 133, 132, 471, 769,
	773, 130, 113, 436, 112, 111, 375, 110, 109, 692,
	760, 619, 168, 167, 166, 759, 165, 171, 170, 169,
	164, 163, 49, 268, 108, 25, 106, 450, 41, 429,
	476, 780, 770, 760, 768, 697, 604, 603, 759, 5,
	4, 3, 1, 0, 0, 0, 0, 0, 771, 0,
	479, 480, 0, 0, 0, 382, 0, 0, 0, 0,
	0, 0, 0, 484, 380, 381, 0, 0, 0, 0,
	0, 472, 0, 0, 0, 470, 0, 0, 459, 0,
	451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 447, 0, 0, 0, 0, 0, 0,
	445, 446, 0, 0, 0, 0, 437, 443, 387, 386,
	238, 385, 384, 388, 448, 433, 457, 458, 17, 0,
	300, 461, 0, 273, 466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 483, 376, 377, 481, 0,
	468, 467, 291, 473, 0, 122, 0, 0, 0, 0,
	469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 0, 0, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 474, 0, 0, 0,
	478, 0, 0, 0, 0, 299, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 378, 379,
	287, 0, 460, 289, 0, 0, 0, 0, 477, 0,
	475, 0, 0, 0, 0, 0, 471, 0, 0, 0,
	0, 436, 0, 0, 375, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 0, 283, 294, 0,
	0, 0, 0, 0, 0, 450, 0, 0, 476, 290,
	0, 0, 0, 0, 0, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 479, 480,
	0, 0, 297, 382, 0, 0, 0, 0, 0, 0,
	0, 484, 380, 381, 0, 0, 0, 0, 288, 472,
	0, 0, 0, 470, 0, 0, 459, 0, 451, 0,
	296, 286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 447, 0, 0, 0, 0, 0, 0, 445, 446,
	0, 0, 0, 0, 437, 443, 387, 386, 238, 385,
	384, 388, 448, 433, 457, 458, 17, 0, 0, 461,
	0, 0, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 482, 483, 376, 377, 481, 0, 468, 467,
	0, 473, 0, 0, 0, 0, 0, 0, 469, 0,
	0, 0, 0, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 0, 0, 0, 478, 0,
	0, 0, 0, 0, 462, 0, 0, 0, 0, 0,
	673, 687, 684, 686, 685, 0, 378, 379, 0, 0,
	460, 0, 0, 0, 0, 0, 477, 0, 475, 0,
	0, 0, 0, 0, 471, 0, 0, 0, 0, 0,
	0, 0, 375, 672, 681, 683, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 0, 0, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 669, 0, 671, 679, 680,
	0, 0, 0, 675, 0, 0, 479, 480, 0, 0,
	0, 382, 0, 550, 0, 0, 0, 0, 0, 484,
	380, 381, 0, 0, 0, 676, 0, 472, 0, 0,
	0, 470, 0, 0, 459, 670, 451, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 447,
	0, 0, 0, 0, 0, 0, 445, 446, 0, 0,
	0, 0, 564, 443, 387, 386, 238, 385, 384, 388,
	0, 433, 457, 458, 17, 0, 674, 0, 0, 545,
	677, 688, 206, 179, 200, 183, 212, 213, 0, 0,
	0, 210, 211, 0, 0, 0, 0, 0, 0, 0,
	549, 0, 551, 0, 0, 0, 0, 0, 0, 0,
	172, 174, 0, 0, 0, 0, 0, 217, 216, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 218, 208, 0,
	0, 0, 192, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 215, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 187,
	188, 0, 0, 0, 185, 204, 186, 79, 80, 81,
	0, 0, 0, 0, 0, 0, 197, 196, 198, 0,
	0, 0, 0, 0, 83, 0, 0, 84, 85, 86,
	0, 0, 0, 193, 195, 0, 0, 87, 0, 0,
	220, 0, 0, 0, 0, 0, 0, 0, 31, 89,
	190, 203, 0, 0, 0, 0, 90, 0, 0, 91,
	92, 0, 0, 0, 184, 0, 0, 173, 175, 181,
	201, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 93, 0, 0, 180, 178, 0, 0, 0, 94,
	0, 0, 176, 79, 80, 81, 0, 0, 0, 0,
	0, 0, 95, 0, 0, 0, 0, 0, 0, 0,
	83, 96, 0, 84, 85, 86, 0, 0, 0, 0,
	0, 0, 0, 87, 0, 97, 0, 134, 0, 98,
	0, 0, 0, 0, 31, 89, 0, 0, 0, 0,
	0, 0, 90, 0, 99, 91, 92, 100, 0, 0,
	0, 0, 0, 101, 102, 103, 0, 0, 0, 0,
	0, 104, 0, 0, 0, 0, 88, 93, 0, 0,
	0, 0, 105, 0, 0, 94, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 95, 0,
	0, 0, 0, 0, 0, 0, 0, 96, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 98, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	99, 0, 0, 100, 0, 0, 0, 0, 0, 101,
	102, 103, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 105,
}

var yyPact = [...]int16{
	147, -127, -1000, -1000, -1000, -1000, 141, -188, 147, 181,
	12, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -188,
	102, 181, 310, 243, -188, 310, -1000, -1000, -1000, -1000,
	508, -1000, -1000, -44, -147, -1000, -142, -142, -142, 42,
	-1000, 1533, 15, -188, -188, -1000, -188, -181, -1000, 1447,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -142,
	-142, -142, 469, -142, -142, -142, -142, 292, 280, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -188, -142, -117, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1348, -188, -188, 261, -1000,
	-1000, 250, -188, -1000, -1000, -1000, -1000, -179, -1000, -1000,
	-1000, -1000, -1000, 71, 388, -174, -174, -174, -174, -181,
	-181, -181, -142, -142, -174, -181, -188, -181, -188, -174,
	-174, -174, -174, -181, -188, -181, -174, -174, -174, 31,
	-95, -1000, 15, 912, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -86, -86, -86, -86, -86, -86, -86,
	-86, -1000, 421, -86, -86, -1000, 421, -1000, 421, -45,
	-45, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-86, -86, -1000, -86, -86, -86, -86, -49, -68, -68,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -87, -1000, -87, 172, -188, 170, -81, 248, -1000,
	-1000, -1000, 353, 27, -1000, -174, 303, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -181, -181, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -188, -1000, -188, -1000, 912, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 92, 51, -1000, -1000, 169, -1000,
	168, -181, -188, 359, -14, -82, -1000, -1000, -174, 417,
	-1000, -1000, -1000, -174, -1000, -1000, -1000, 421, 421, -1000,
	-1000, 353, -1000, -188, -1000, 421, 353, 353, 421, -181,
	421, -1000, -11, -11, -11, -11, -11, -11, -1000, -174,
	-11, -1000, -174, -11, 518, 899, 518, -87, -87, -188,
	899, -1000, -1000, -1000, -1000, -188, 24, -1000, 367, -1000,
	-1000, -1000, -1000, -1000, 254, 116, 99, -1000, -1000, -1000,
	-1000, -121, -1000, -1000, -1000, -1000, -1000, 899, -86, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -87, 405, 899, -1000, 402, -105, 353, 353,
	-1000, -1000, 353, -1000, -1000, 353, -128, -1000, 353, -42,
	-1000, -42, -42, -42, -42, -42, -129, -42, -119, -42,
	518, -1000, -1000, -1000, -1000, -1000, -1000, -188, 79, -130,
	-1000, -83, 237, -1000, 899, 441, -1000, 1117, -1000, 194,
	342, -1000, -1000, -1000, -1000, 1117, 1117, 1117, 1117, -1000,
	-96, -188, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 899,
	-95, 899, 899, -84, -85, -86, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 518, 518, 518, -87, 537,
	-90, -1000, -93, -1000, -174, 134, -94, 472, 899, -95,
	899, -95, -188, -1000, 528, -1000, 106, -1000, -1000, 187,
	-1000, -1000, -1000, 474, -1000, -1000, -1000, -1000, -1000, -1000,
	-181, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -174, -1000, -174, -1000, -1000, -1000, -188, -1000, 899,
	329, 899, -1000, 899, 899, 899, -1000, -1000, -1000, -1000,
	-1000, -1000, 76, 96, 1117, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 342, 1117, 384, 156, 1117, 1117, 1117,
	1117, 1117, 1117, 1117, 1117, 1117, 1117, -1000, -1000, -1000,
	-1000, -1000, -188, 342, 342, 342, 342, -1000, 899, -134,
	76, 476, 361, 1166, 899, -1000, -102, -1000, 518, 518,
	52, 195, 899, -1000, -1000, 74, -1000, -1000, -1000, 899,
	-95, -1000, -142, 415, -1000, 368, -1000, -1000, -1000, 106,
	-1000, -1000, -1000, -1000, -188, 124, -1000, -1000, -1000, -1000,
	-103, -104, -1000, -1000, -1000, -105, -107, -125, 76, 76,
	76, 130, -1000, -96, 1117, 1117, 1117, 1117, 419, 419,
	419, 419, 419, -1000, 419, -1000, 419, 419, 419, 419,
	-1000, 298, -1000, 899, -97, 104, -1000, 899, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -108,
	-1000, -1000, 195, -1000, -1000, -1000, -1000, -135, -1000, -188,
	294, -1000, -174, -1000, -1000, -1000, -1000, 405, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 53, 342, 419, 419, -1000,
	76, 1117, 274, -1000, -1000, 899, 293, -1000, -1000, -1000,
	74, -21, -1000, -1000, -1000, 1117, 171, -1000, 76, 899,
	-1000, 674, 149, -1000, -112, -1000, 203, 60, 76, 651,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -188, -142,
	267, -1000, 3, -100, -1000, 161, 113, 236, -1000, -1000,
	-1000, 26, -1000, -188, -1000, -12, 899, 105, -1000, -1000,
	-136, -1000, -188, -1000, 681, -1000, 226, -31, -1000, 26,
	674, 101, -113, -1000, 56, -1000, 674, -1000, -1000, 222,
	-1000,
}

var yyPgo = [...]int16{
	0, 842, 473, 841, 840, 839, 837, 836, 835, 834,
	832, 831, 34, 829, 828, 826, 825, 403, 189, 824,
	823, 41, 822, 400, 821, 820, 819, 818, 817, 816,
	814, 813, 812, 19, 811, 15, 59, 809, 9, 808,
	807, 39, 18, 805, 804, 802, 22, 801, 797, 796,
	793, 791, 29, 28, 789, 787, 782, 777, 6, 3,
	2, 5, 169, 776, 17, 775, 14, 30, 24, 74,
	773, 772, 771, 770, 769, 33, 767, 37, 12, 766,
	21, 764, 763, 51, 0, 23, 1, 761, 4, 11,
	760, 755, 754, 750, 748, 10, 747, 746, 743, 738,
	733, 16, 729, 728, 712, 711, 708, 705, 36, 698,
	26, 434, 689, 659, 697, 35, 201, 694, 693, 692,
	52, 58, 686, 32, 685, 684, 683, 682, 38, 27,
	645, 680, 679, 50, 42, 678, 677, 13, 7, 675,
	674, 673, 666, 663, 662, 661, 574, 660, 565, 537,
	656, 630, 627, 626, 489, 406, 623, 622, 621, 614,
	612, 609, 605, 604, 603, 602, 586, 585, 581, 578,
	573, 571, 570, 569, 564, 560, 558, 40, 556, 551,
	462, 405, 402, 549, 543, 522, 521, 518, 31, 56,
	515, 513, 511, 506, 505, 499, 496, 483,
}

var yyR1 = [...]uint8{
	0, 1, 1, 1, 2, 2, 2, 2, 4, 3,
	111, 16, 16, 16, 17, 17, 17, 112, 113, 114,
	5, 75, 75, 14, 15, 15, 18, 18, 18, 18,
	18, 18, 18, 19, 24, 24, 24, 24, 24, 25,
	25, 25, 26, 26, 26, 26, 26, 26, 26, 27,
	28, 28, 115, 115, 116, 69, 69, 70, 71, 71,
	72, 72, 29, 29, 29, 29, 29, 30, 30, 30,
	30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
	30, 31, 32, 32, 32, 32, 32, 32, 32, 32,
	20, 20, 20, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 117, 117, 118, 119,
	119, 119, 120, 120, 121, 121, 122, 123, 123, 124,
	125, 126, 126, 127, 39, 40, 43, 44, 45, 128,
	128, 12, 13, 13, 129, 129, 129, 46, 46, 41,
	41, 41, 42, 42, 42, 42, 42, 130, 131, 132,
	133, 33, 34, 34, 34, 35, 35, 35, 135, 136,
	137, 138, 138, 138, 138, 138, 138, 36, 134, 134,
	134, 37, 37, 37, 38, 139, 139, 22, 22, 22,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 140, 141,
	142, 143, 146, 144, 145, 148, 149, 147, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 73, 163, 163, 164, 74, 47, 47, 48, 49,
	49, 49, 49, 165, 165, 166, 50, 50, 51, 51,
	167, 167, 168, 52, 53, 54, 54, 55, 55, 56,
	56, 57, 6, 6, 7, 8, 8, 58, 76, 76,
	76, 76, 59, 59, 59, 60, 60, 60, 60, 60,
	60, 60, 170, 169, 9, 9, 10, 11, 11, 61,
	177, 177, 110, 110, 77, 77, 77, 77, 77, 77,
	77, 78, 78, 82, 82, 79, 79, 80, 81, 83,
	98, 98, 99, 63, 63, 62, 84, 84, 65, 65,
	64, 171, 171, 100, 100, 100, 100, 100, 100, 100,
	100, 68, 68, 66, 67, 67, 86, 86, 86, 86,
	86, 86, 86, 173, 173, 174, 174, 172, 172, 175,
	175, 176, 176, 87, 87, 87, 88, 88, 88, 88,
	88, 88, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 90, 91, 91, 92, 92, 92, 92, 93,
	94, 94, 96, 96, 97, 95, 101, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 103, 103, 105,
	105, 105, 109, 109, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	107, 107, 107, 107, 108, 108, 108, 108, 108, 108,
	104, 178, 178, 179, 179, 180, 180, 181, 181, 182,
	182, 183, 183, 184, 184, 185, 185, 185, 186, 186,
	187, 187, 188, 188, 189, 189, 190, 190, 191, 191,
	192, 192, 193, 193, 194, 194, 194, 195, 195, 195,
	196, 196, 197, 197,
}

var yyR2 = [...]int8{
	0, 0, 1, 3, 0, 1, 1, 1, 2, 5,
	1, 0, 1, 2, 1, 1, 1, 4, 4, 4,
	8, 1, 3, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 4, 1, 4, 4, 4, 4, 4,
	4, 4, 0, 1, 3, 0, 1, 5, 0, 1,
	3, 5, 1, 2, 2, 2, 2, 4, 4, 2,
	2, 1, 3, 2, 4, 1, 3, 1, 3, 4,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	3, 2, 1, 1, 0, 1, 2, 0, 1, 2,
	4, 1, 1, 2, 4, 4, 5, 5, 6, 0,
	1, 3, 1, 3, 0, 1, 1, 3, 2, 0,
	1, 2, 1, 1, 1, 1, 1, 3, 2, 3,
	2, 4, 0, 1, 2, 1, 1, 1, 2, 3,
	3, 1, 2, 1, 2, 1, 1, 6, 0, 1,
	2, 0, 1, 2, 1, 1, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 0, 1, 2, 3, 0, 1, 5, 3,
	3, 3, 3, 0, 1, 2, 0, 1, 3, 3,
	0, 1, 2, 5, 4, 4, 3, 4, 3, 0,
	1, 3, 0, 1, 3, 1, 3, 5, 6, 6,
	4, 5, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 3, 2, 0, 1, 3, 1, 3, 3,
	0, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 1, 3, 3, 1, 1, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 3, 1, 3, 3, 3, 3, 2,
	4, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 4, 6, 4, 4,
	4, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 1, 1, 1, 1, 3, 1,
	1, 2, 2, 2, 2, 2, 1, 2, 4, 1,
	1, 1, 7, 0, 1, 4, 7, 3, 3, 5,
	1, 2, 0, 1, 2, 4, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	2, 2, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 0, 1, 1, 1, 0, 3, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 1, 1, 2, 1, 2,
	3, 1, 1, 1, 1, 2, 2, 1, 2, 2,
	0, 1, 2, 1,
}

var yyChk = [...]int16{
	-1000, -1, -2, -3, -4, -5, 34, 180, 202, -179,
	-178, 41, 148, 165, -111, -84, 234, 237, -2, -180,
	81, 163, -111, 122, -180, -16, -17, -112, -113, -114,
	-181, 51, 65, -75, -84, -17, -182, 28, 59, 24,
	25, -14, 197, 204, -177, 203, -177, -177, 152, -22,
	-23, -140, -141, -142, -112, -113, -143, -146, -144, -145,
	-148, -149, -147, -150, -151, -152, -153, -130, -154, -155,
	-156, -157, -158, -159, -160, -161, -162, -73, -74, 10,
	11, 12, -181, 27, 30, 31, 32, 40, 83, 52,
	59, 62, 63, 84, 92, 105, 114, 128, 132, 147,
	150, 156, 157, 158, 164, 175, -15, -18, -19, -39,
	-40, -43, -44, -45, -36, -84, -193, -194, -134, 83,
	91, 72, 33, -84, -84, -84, -83, -98, -99, 234,
	-47, -23, -48, -49, 130, -177, -177, -177, -177, -177,
	-177, -177, 55, 55, -177, -177, -177, -177, -177, -177,
	-177, -177, -177, -177, -177, -177, -177, -177, -177, -84,
	-177, 198, 201, -24, -25, -29, -30, -31, -32, -26,
	-27, -28, 42, 169, 43, 170, 194, -187, 187, 15,
	186, 171, 173, 17, 166, 106, 108, 101, 102, 64,
	152, 90, 74, 135, 97, 136, 119, 118, 120, 75,
	16, 172, -183, 153, 107, -184, 14, -185, 70, -186,
	23, 24, 18, 19, 85, 86, 50, 49, 69, 57,
	142, -128, -84, -128, 137, -195, 71, 26, 176, 91,
	83, -84, 233, -165, -166, 131, 20, -80, 229, -80,
	-80, -80, -83, -83, -83, -177, -177, -80, -83, -84,
	-83, -84, -80, -80, -80, -80, -83, -84, -83, -80,
	-80, -80, -163, -164, 159, -64, 197, -18, -20, -21,
	-117, -118, -120, 11, -190, -191, -133, -33, -36, -137,
	-125, -126, -127, 125, 122, 51, 189, 88, 176, 91,
	137, 30, 143, -134, 126, -192, 188, 160, 155, 73,
	8, -115, -116, 197, -115, -115, -115, -115, -116, -115,
	-116, -121, -122, -182, -115, -115, -121, -121, -62, 197,
	-62, -115, -115, -115, -115, -115, -115, -71, -72, 197,
	-69, -70, 197, -69, -12, 197, -12, 91, -128, 91,
	197, 91, 83, -123, -124, 28, -50, -51, 161, -80,
	-52, -53, -54, -55, -196, 141, 98, 96, -83, -83,
	-84, -65, -84, -21, 125, -119, -77, 197, -108, -78,
	-82, -79, -80, -81, -83, 125, 37, 38, 99, 100,
	183, 184, 174, 68, 231, 230, 228, 227, 232, 91,
	91, -83, -75, 179, 197, -80, 6, -80, -121, -121,
	-123, -84, -121, -123, -123, -121, -63, -83, -121, -188,
	178, -188, -188, -188, -188, -188, -80, -188, -80, -188,
	-41, -42, -130, -131, -132, -133, -120, 181, 192, -13,
	-46, -84, -86, 234, -172, -87, 122, 225, -88, -85,
	-89, -77, -103, 226, -171, 219, 220, 212, 15, -66,
	146, 199, -90, -93, -101, -104, -105, 235, 236, 197,
	103, 22, 87, -106, -107, -108, 25, 42, 41, 51,
	194, 117, 190, 44, 77, 111, 149, 109, 81, 169,
	170, 39, 35, 36, 182, -41, -12, -12, -128, -86,
	-84, -84, -167, -168, 162, 20, 76, 91, 197, 29,
	197, 29, 201, 198, -86, -115, -12, -138, 21, 152,
	145, 124, 38, -86, 8, 198, -123, -123, -123, -123,
	201, 198, -123, -189, 196, -189, -189, -189, -189, -189,
	198, 201, -189, 201, -189, -42, -84, 129, 198, 201,
	-115, 197, -129, -173, -174, 193, 9, 54, 7, 214,
	127, 216, -86, 89, -100, 203, 205, 206, 207, 208,
	209, 210, 211, -89, 225, -110, 154, 215, 213, 217,
	218, 219, 220, 221, -175, -176, 224, 122, 56, 222,
	115, 223, 28, -89, -89, -89, -89, -66, -84, -67,
	-86, -64, -86, -86, 197, -109, 197, -115, -41, -41,
	-12, 198, 197, -6, -7, 197, -80, -52, -53, 197,
	-56, -57, 5, -86, -64, -86, -64, -84, 198, -34,
	-35, -135, -136, -137, 103, 126, 125, 51, 198, -83,
	-80, -80, -84, -46, -129, -80, -68, -67, -86, -86,
	-86, -110, -88, 82, 13, 95, 144, 95, -85, -85,
	-85, -85, -85, -101, -85, -101, -85, -85, -85, -85,
	-84, -86, 198, 201, 4, -94, -95, 191, -102, 109,
	149, 111, 77, 44, 190, 117, 139, 194, 151, 112,
	113, 78, 80, 79, 46, 48, 47, 45, 195, -68,
	198, -33, -37, -38, -139, 61, 123, -8, -58, 130,
	-86, -64, -177, 198, 198, -35, -84, 53, 198, 198,
	198, -78, 177, 125, -66, -85, -89, -85, -85, 200,
	-86, 197, -96, -95, -97, 58, -86, 198, -38, 198,
	201, -84, 198, -80, -138, 7, -85, 60, -86, 168,
	-58, -76, 185, -88, -91, -92, 82, 192, -86, -59,
	-60, -169, -146, -148, -149, -154, -155, -170, -197, 164,
	159, 62, 94, 82, 198, 121, 19, 140, -9, -60,
	-10, 197, -84, -177, 62, 167, 197, 93, 116, 66,
	-11, -61, 161, -84, 197, 104, -86, 116, 198, 201,
	-84, -86, 104, 198, 192, -61, -59, 198, 198, 140,
	66,
}

var yyDef = [...]int16{
	1, -2, 2, 5, 6, 7, 461, 0, 4, 465,
	0, 463, 464, 462, 8, 10, 316, 317, 3, 0,
	0, 465, 11, 0, 0, -2, 12, 14, 15, 16,
	0, 468, 466, 0, 21, 13, 290, 290, 290, 0,
	470, 177, 168, 0, 0, 291, 0, 310, 469, -2,
	178, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 290,
	290, 290, 0, 290, 290, 290, 290, 0, 0, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 0, 290, 0, 24, 26, 27,
	28, 29, 30, 31, 32, 0, 129, 129, 0, 492,
	493, 494, 169, 22, 17, 18, 19, 0, 311, 312,
	20, 179, 237, 243, 0, 0, 0, 0, 0, 310,
	310, 310, 290, 290, 0, 310, 0, 310, 0, 0,
	0, 0, 0, 310, 0, 310, 0, 0, 0, 232,
	0, 23, 168, 90, 34, 35, 36, 37, 38, 39,
	40, 41, 62, 52, 52, 52, 52, 52, 0, 52,
	0, 71, 114, 52, 52, 75, 114, 77, 114, 0,
	0, 81, 82, 83, 84, 85, 86, 87, 88, 89,
	52, 52, 44, 52, 52, 52, 52, 58, 55, 55,
	480, 481, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 0, 130, 0, 0, 129, 0, 0, 497, 495,
	496, 170, 117, 246, 244, 0, 500, 208, 307, 209,
	210, 211, 212, 213, 214, 310, 310, 217, 218, 219,
	220, 221, 147, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 233, 0, 235, 0, 25, -2, 91,
	93, 94, 95, 96, 97, 98, 99, 100, 101, 102,
	103, 104, 105, 106, 0, 310, 112, 113, 486, 488,
	0, 310, 0, 0, 0, 0, 121, 122, 0, 0,
	491, 63, 53, 0, 64, 65, 66, 114, 114, 69,
	70, 117, 115, 0, 73, 114, 117, 117, 114, 310,
	114, 42, 482, 482, 482, 482, 482, 482, 59, 0,
	482, 56, 0, 482, 139, 310, 139, 0, 0, 129,
	310, 498, 499, 309, 118, 0, 250, 247, 0, 245,
	239, 240, 241, 242, 0, 0, 0, 501, 215, 216,
	234, 0, 318, 92, 107, 108, 109, 310, 52, 294,
	295, 296, 297, 298, 299, 300, 454, 455, 456, 457,
	458, 459, 301, 302, 303, 304, 305, 306, 308, 487,
	489, 150, 0, 0, 310, 123, 0, 0, 117, 117,
	72, 116, 117, 76, 78, 117, 0, 313, 117, 484,
	483, 484, 484, 484, 484, 484, 0, 484, 0, 484,
	124, 140, 142, 143, 144, 145, 146, 0, 0, 0,
	132, -2, 134, -2, 310, 342, 347, -2, 355, -2,
	374, 375, 377, 379, 380, 310, 310, 310, 310, 386,
	0, 0, 389, 390, 391, 427, 428, 321, 322, 310,
	0, 310, 310, 0, 432, 52, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 448,
	449, 450, 451, 452, 453, 125, 139, 139, 0, 0,
	376, 119, 262, 251, 0, 500, 0, 259, 310, 0,
	310, 0, 0, 320, 0, 111, 152, 160, 161, 0,
	163, 165, 166, 0, 490, 54, 67, 68, 74, 79,
	310, 315, 80, 43, 485, 45, 46, 47, 48, 49,
	60, 0, 50, 0, 51, 141, 148, 0, 131, 310,
	134, -2, 138, 310, 310, 310, 135, 136, 343, 344,
	345, 346, 339, 292, 310, 323, 324, 325, 326, 327,
	328, 329, 330, 384, 310, 0, 0, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 293, 349, 350,
	351, 352, 0, 381, 382, 383, 385, 387, 310, 0,
	334, 0, 0, 0, -2, 430, 0, 431, 126, 127,
	0, 171, -2, 238, 263, 0, 252, 248, 249, 310,
	0, 260, 290, 0, 256, 0, 258, 319, 110, 151,
	153, 155, 156, 157, 0, 0, 162, 164, 120, 314,
	0, 0, 149, 133, 137, 297, 0, 332, 336, 337,
	338, 0, 354, 0, 310, 310, 310, 310, 362, 363,
	364, 365, 366, -2, 367, -2, 368, 369, 370, 371,
	378, 0, 333, 310, 0, 402, 400, 310, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 0,
	433, 128, 167, 172, 174, 175, 176, 0, 265, 0,
	0, 254, 0, 255, 257, 154, 158, 0, 61, 57,
	460, 340, 341, 353, 356, 0, 359, 360, 358, 388,
	335, 310, 0, 401, 403, 310, 0, 429, 173, 264,
	0, 0, 253, 261, 159, 310, 393, 399, 404, 310,
	266, 272, 0, 357, 0, 394, 0, 0, 405, 284,
	273, 275, 276, 277, 278, 279, 280, 281, 0, 290,
	0, 503, 0, 0, 392, 0, 0, 0, 267, 274,
	285, 0, 283, 0, 502, 0, 310, 0, 397, 398,
	0, 287, 0, 282, 310, 270, 0, 395, 286, 0,
	272, 0, 0, 271, 0, 288, 289, 268, 269, 0,
	396,
}

var yyTok1 = [...]int8{
	1,
}

var yyTok2 = [...]uint8{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237,
}

var yyTok3 = [...]int8{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(yyPact[state])
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && int(yyChk[int(yyAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || int(yyExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := int(yyExca[i])
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(yyTok1[0])
		goto out
	}
	if char < len(yyTok1) {
		token = int(yyTok1[char])
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = int(yyTok2[char-yyPrivate])
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = int(yyTok3[i+0])
		if token == char {
			token = int(yyTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(yyTok2[1]) /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = int(yyPact[yystate])
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = int(yyAct[yyn])
	if int(yyChk[yyn]) == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = int(yyDef[yystate])
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && int(yyExca[xi+1]) == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = int(yyExca[xi+0])
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = int(yyExca[xi+1])
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = int(yyPact[yyS[yyp].yys]) + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = int(yyAct[yyn]) /* simulate a shift of "error" */
					if int(yyChk[yystate]) == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= int(yyR2[yyn])
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = int(yyR1[yyn])
	yyg := int(yyPgo[yyn])
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = int(yyAct[yyg])
	} else {
		yystate = int(yyAct[yyj])
		if int(yyChk[yystate]) != -yyn {
			yystate = int(yyAct[yyg])
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.statements = []Statement{}
			yylex.(*Parser).result = yyVAL.statements
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.statements = []Statement{yyDollar[1].statement}
			yylex.(*Parser).result = yyVAL.statements
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			if yyDollar[3].statement != nil {
				yyDollar[1].statements = append(yyDollar[1].statements, yyDollar[3].statement)
			}
			yyVAL.statements = yyDollar[1].statements
			yylex.(*Parser).result = yyDollar[1].statements
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.statement = nil
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 8:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.statement = UseStatement{
				DbName: yyDollar[2].stringItem,
			}
		}
	case 9:
		yyDollar = yyS[yypt-5 : yypt+1]
		{
			yyVAL.statement = CreateDatabaseStatement{
				IfNotExists:     yyDollar[3].keyword,
				DbName:          yyDollar[4].stringItem,
				DatabaseOptions: yyDollar[5].item.(*DatabaseOptions),
			}
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 11:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.item = &DatabaseOptions{}
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item
		}
	case 13:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			// TODO: error handling
			merged := yyDollar[1].item.(*DatabaseOptions)
			mergo.Merge(merged, yyDollar[2].item.(*DatabaseOptions))
			yyVAL.item = merged
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = &DatabaseOptions{
				DefaultCharset: yyDollar[1].stringItem,
			}
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = &DatabaseOptions{
				DefaultCollate: yyDollar[1].stringItem,
			}
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = &DatabaseOptions{
				DefaultEncryption: yyDollar[1].stringItem,
			}
		}
	case 17:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[4].stringItem
		}
	case 18:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[4].stringItem
		}
	case 19:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[4].stringItem
		}
	case 20:
		yyDollar = yyS[yypt-8 : yypt+1]
		{
			yyVAL.statement = CreateTableStatement{
				DbName:            yyDollar[5].stringList[0],
				Temporary:         yyDollar[2].keyword,
				IfNotExists:       yyDollar[4].keyword,
				TableName:         yyDollar[5].stringList[1],
				CreateDefinitions: yyDollar[6].list,
				TableOptions:      yyDollar[7].item.(TableOptions),
				Partitions:        yyDollar[8].item.(PartitionConfig),
			}
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringList = []string{"", yyDollar[1].stringItem}
		}
	case 22:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringList = []string{yyDollar[1].stringItem, yyDollar[3].stringItem}
		}
	case 23:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.list = yyDollar[2].list
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.list = []interface{}{yyDollar[1].item}
		}
	case 25:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].item)
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item.(*ColumnDefinition)
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item.(*IndexDefinition)
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item.(*FullTextIndexDefinition)
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item.(*PrimaryKeyDefinition)
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item.(*UniqueKeyDefinition)
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item.(*ForeignKeyDefinition)
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item.(*CheckConstraintDefinition)
		}
	case 33:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			columnOptions := yyDollar[3].item.(ColumnOptions)
			if columnOptions.Nullability == "" {
				columnOptions.Nullability = "NULL"
			}
			yyVAL.item = &ColumnDefinition{
				ColumnName:    yyDollar[1].stringItem,
				DataType:      yyDollar[2].item,
				ColumnOptions: yyDollar[3].item.(ColumnOptions),
			}
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item
		}
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.item = IntegerType{
				Name:     "bit",
				FieldLen: yyDollar[2].stringItem,
			}
		}
	case 43:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.item = IntegerType{
				Name:     "tinyint",
				FieldLen: yyDollar[2].stringItem,
				Unsigned: yyDollar[3].keyword,
				Zerofill: yyDollar[4].keyword,
			}
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = IntegerType{
				Name: "bool",
			}
		}
	case 45:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.item = IntegerType{
				Name:     "smallint",
				FieldLen: yyDollar[2].stringItem,
				Unsigned: yyDollar[3].keyword,
				Zerofill: yyDollar[4].keyword,
			}
		}
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.item = IntegerType{
				Name:     "mediumint",
				FieldLen: yyDollar[2].stringItem,
				Unsigned: yyDollar[3].keyword,
				Zerofill: yyDollar[4].keyword,
			}
		}
	case 47:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.item = IntegerType{
				Name:     "int",
				FieldLen: yyDollar[2].stringItem,
				Unsigned: yyDollar[3].keyword,
				Zerofill: yyDollar[4].keyword,
			}
		}
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.item = IntegerType{
				Name:     "bigint",
				FieldLen: yyDollar[2].stringItem,
				Unsigned: yyDollar[3].keyword,
				Zerofill: yyDollar[4].keyword,
			}
		}
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			fieldLen := ""
			fieldScale := ""
			if len(yyDollar[2].stringList) >= 1 {
				fieldLen = yyDollar[2].stringList[0]
				if len(yyDollar[2].stringList) >= 2 {
					fieldScale = yyDollar[2].stringList[1]
				}
			}
			yyVAL.item = FixedPointType{
				Name:       "decimal",
				FieldLen:   fieldLen,
				FieldScale: fieldScale,
				Unsigned:   yyDollar[3].keyword,
				Zerofill:   yyDollar[4].keyword,
			}
		}
	case 50:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			fieldLen := ""
			fieldScale := ""
			if len(yyDollar[2].stringList) >= 2 {
				fieldLen = yyDollar[2].stringList[0]
				fieldScale = yyDollar[2].stringList[1]
			}
			yyVAL.item = FloatingPointType{
				Name:       "float",
				FieldLen:   fieldLen,
				FieldScale: fieldScale,
				Unsigned:   yyDollar[3].keyword,
				Zerofill:   yyDollar[4].keyword,
			}
		}
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			fieldLen := ""
			fieldScale := ""
			if len(yyDollar[2].stringList) >= 2 {
				fieldLen = yyDollar[2].stringList[0]
				fieldScale = yyDollar[2].stringList[1]
			}
			yyVAL.item = FloatingPointType{
				Name:       "double",
				FieldLen:   fieldLen,
				FieldScale: fieldScale,
				Unsigned:   yyDollar[3].keyword,
				Zerofill:   yyDollar[4].keyword,
			}
		}
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.stringItem = ""
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 55:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.stringList = []string{}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringList = yyDollar[1].stringList
		}
	case 57:
		yyDollar = yyS[yypt-5 : yypt+1]
		{
			yyVAL.stringList = []string{yyDollar[2].stringItem, yyDollar[4].stringItem}
		}
	case 58:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.stringList = []string{}
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringList = yyDollar[1].stringList
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringList = []string{yyDollar[2].stringItem}
		}
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		{
			yyVAL.stringList = []string{yyDollar[2].stringItem, yyDollar[4].stringItem}
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = DateAndTimeType{
				Name: "date",
			}
		}
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = DateAndTimeType{
				Name:     "time",
				FieldLen: fieldLen,
			}
		}
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = DateAndTimeType{
				Name:     "datetime",
				FieldLen: fieldLen,
			}
		}
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = DateAndTimeType{
				Name:     "timestamp",
				FieldLen: fieldLen,
			}
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = DateAndTimeType{
				Name:     "year",
				FieldLen: fieldLen,
			}
		}
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = StringType{
				Name:      "char",
				FieldLen:  fieldLen,
				Charset:   yyDollar[3].stringItem,
				Collation: yyDollar[4].stringItem,
			}
		}
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.item = StringType{
				Name:      "varchar",
				FieldLen:  yyDollar[2].stringItem,
				Charset:   yyDollar[3].stringItem,
				Collation: yyDollar[4].stringItem,
			}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = StringType{
				Name:     "binary",
				FieldLen: fieldLen,
			}
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.item = StringType{
				Name:     "varbinary",
				FieldLen: yyDollar[2].stringItem,
			}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = StringType{
				Name: "tinyblob",
			}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.item = StringType{
				Name:      "tinytext",
				Charset:   yyDollar[2].stringItem,
				Collation: yyDollar[3].stringItem,
			}
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = StringType{
				Name:     "blob",
				FieldLen: fieldLen,
			}
		}
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			fieldLen := ""
			if yyDollar[2].stringItem != "" {
				fieldLen = yyDollar[2].stringItem
			}
			yyVAL.item = StringType{
				Name:      "text",
				FieldLen:  fieldLen,
				Charset:   yyDollar[3].stringItem,
				Collation: yyDollar[4].stringItem,
			}
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = StringType{
				Name: "mediumblob",
			}
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.item = StringType{
				Name:      "mediumtext",
				Charset:   yyDollar[2].stringItem,
				Collation: yyDollar[3].stringItem,
			}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = StringType{
				Name: "longblob",
			}
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.item = StringType{
				Name:      "longtext",
				Charset:   yyDollar[2].stringItem,
				Collation: yyDollar[3].stringItem,
			}
		}
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.item = StringListType{
				Name:      "enum",
				Values:    yyDollar[2].stringList,
				Charset:   yyDollar[3].stringItem,
				Collation: yyDollar[4].stringItem,
			}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.item = StringListType{
				Name:      "set",
				Values:    yyDollar[2].stringList,
				Charset:   yyDollar[3].stringItem,
				Collation: yyDollar[4].stringItem,
			}
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = JsonType{
				Name: "json",
			}
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = SpatialType{
				Name: "geometry",
			}
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = SpatialType{
				Name: "point",
			}
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = SpatialType{
				Name: "linestring",
			}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = SpatialType{
				Name: "polygon",
			}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = SpatialType{
				Name: "multipoint",
			}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = SpatialType{
				Name: "multilinestring",
			}
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = SpatialType{
				Name: "multipolygon",
			}
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = SpatialType{
				Name: "geometrycollection",
			}
		}
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.item = ColumnOptions{}
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			// TODO: error handling
			merged := yyDollar[1].item.(ColumnOptions)
			mergo.Merge(&merged, yyDollar[2].item.(ColumnOptions))
			yyVAL.item = merged
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = ColumnOptions{
				Nullability: yyDollar[1].stringItem,
			}
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = ColumnOptions{
				Default: yyDollar[1].stringItem,
			}
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = ColumnOptions{
				Visibility: yyDollar[1].stringItem,
			}
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = ColumnOptions{
				AutoIncrement: true,
			}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = ColumnOptions{
				Unique: yyDollar[1].keyword,
			}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = ColumnOptions{
				Primary: yyDollar[1].keyword,
			}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = ColumnOptions{
				Comment: yyDollar[1].stringItem,
			}
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = ColumnOptions{
				ReferenceDefinition: yyDollar[1].item.(ReferenceDefinition),
			}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = ColumnOptions{
				CheckConstraintDefinition: yyDollar[1].item.(CheckConstraintDefinition),
			}
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = ColumnOptions{
				OnUpdate: yyDollar[1].stringItem,
			}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = ColumnOptions{
				GeneratedAs: yyDollar[1].stringItem,
			}
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = ColumnOptions{
				GeneratedColumnType: yyDollar[1].stringItem,
			}
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = ColumnOptions{
				Srid: yyDollar[1].stringItem,
			}
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "NULL"
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = "NOT NULL"
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("(%s)", yyDollar[2].stringItem)
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = compactJoin([]string{yyDollar[1].stringItem, yyDollar[2].stringItem}, "")
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "VISIBLE"
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "INVISIBLE"
		}
	case 114:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.stringItem = ""
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.stringItem = ""
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("(%s)", yyDollar[3].stringItem)
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "VIRTUAL"
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "STORED"
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.item = &IndexDefinition{
				IndexName:    yyDollar[2].stringItem,
				KeyPartList:  yyDollar[3].keyPartList,
				IndexOptions: yyDollar[4].item.(IndexOptions),
			}
		}
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.item = &FullTextIndexDefinition{
				IndexName:    yyDollar[2].stringItem,
				KeyPartList:  yyDollar[3].keyPartList,
				IndexOptions: yyDollar[4].item.(IndexOptions),
			}
		}
	case 126:
		yyDollar = yyS[yypt-5 : yypt+1]
		{
			yyVAL.item = &PrimaryKeyDefinition{
				ConstraintName: yyDollar[1].stringItem,
				KeyPartList:    yyDollar[4].keyPartList,
				IndexOptions:   yyDollar[5].item.(IndexOptions),
			}
		}
	case 127:
		yyDollar = yyS[yypt-5 : yypt+1]
		{
			yyVAL.item = &UniqueKeyDefinition{
				ConstraintName: yyDollar[1].stringItem,
				IndexName:      yyDollar[3].stringItem,
				KeyPartList:    yyDollar[4].keyPartList,
				IndexOptions:   yyDollar[5].item.(IndexOptions),
			}
		}
	case 128:
		yyDollar = yyS[yypt-6 : yypt+1]
		{
			yyVAL.item = &ForeignKeyDefinition{
				ConstraintName:      yyDollar[1].stringItem,
				IndexName:           yyDollar[4].stringItem,
				KeyPartList:         yyDollar[5].keyPartList,
				ReferenceDefinition: yyDollar[6].item.(ReferenceDefinition),
			}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.stringItem = ""
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.keyPartList = yyDollar[2].keyPartList
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyPartList = []KeyPart{yyDollar[1].item.(KeyPart)}
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.keyPartList = append(yyDollar[1].keyPartList, yyDollar[3].item.(KeyPart))
		}
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.stringItem = ""
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "ASC"
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "DESC"
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.item = KeyPart{
				Column: yyDollar[1].stringItem,
				Length: yyDollar[2].stringItem,
				Order:  yyDollar[3].stringItem,
			}
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			column := findFirstIdentifier(yyDollar[1].stringItem)
			yyVAL.item = KeyPart{
				Column:     column,
				Expression: yyDollar[1].stringItem,
				Order:      yyDollar[2].stringItem,
			}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.item = IndexOptions{}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			// TODO: error handling
			merged := yyDollar[1].item.(IndexOptions)
			mergo.Merge(&merged, yyDollar[2].item.(IndexOptions))
			yyVAL.item = merged
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = IndexOptions{
				KeyBlockSize: yyDollar[1].stringItem,
			}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = IndexOptions{
				IndexType: yyDollar[1].stringItem,
			}
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = IndexOptions{
				Parser: yyDollar[1].stringItem,
			}
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = IndexOptions{
				Comment: yyDollar[1].stringItem,
			}
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = IndexOptions{
				Visibility: yyDollar[1].stringItem,
			}
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.item = ReferenceDefinition{
				TableName:        yyDollar[2].stringList[1],
				KeyPartList:      yyDollar[3].keyPartList,
				ReferenceOptions: yyDollar[4].item.(ReferenceOptions),
			}
		}
	case 152:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.item = ReferenceOptions{}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			// TODO: error handling
			merged := yyDollar[1].item.(ReferenceOptions)
			mergo.Merge(&merged, yyDollar[2].item.(ReferenceOptions))
			yyVAL.item = merged
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = ReferenceOptions{
				Match: yyDollar[1].stringItem,
			}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = ReferenceOptions{
				OnDelete: yyDollar[1].stringItem,
			}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = ReferenceOptions{
				OnUpdate: yyDollar[1].stringItem,
			}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "CASCADE"
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = "SET NULL"
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "RESTRICT"
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = "SET DEFAULT"
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "RESTRICT"
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "CURRENT_TIMESTAMP"
		}
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
		{
			yyVAL.item = &CheckConstraintDefinition{
				ConstraintName:         yyDollar[1].stringItem,
				Check:                  yyDollar[4].stringItem,
				CheckConstraintOptions: yyDollar[6].item.(CheckConstraintOptions),
			}
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.stringItem = ""
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = ""
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.item = CheckConstraintOptions{}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			// TODO: error handling
			merged := yyDollar[1].item.(CheckConstraintOptions)
			mergo.Merge(&merged, yyDollar[2].item.(CheckConstraintOptions))
			yyVAL.item = merged
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = CheckConstraintOptions{
				Enforcement: yyDollar[1].stringItem,
			}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "ENFORCED"
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "NOT ENFORCED"
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.item = TableOptions{}
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			// TODO: error handling
			merged := yyDollar[1].item.(TableOptions)
			mergo.Merge(&merged, yyDollar[2].item.(TableOptions))
			yyVAL.item = merged
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				AutoExtendedSize: yyDollar[1].stringItem,
			}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				AutoIncrement: yyDollar[1].stringItem,
			}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				AvgRowLength: yyDollar[1].stringItem,
			}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				DefaultCharset: yyDollar[1].stringItem,
			}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				DefaultCollate: yyDollar[1].stringItem,
			}
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				Checksum: yyDollar[1].stringItem,
			}
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				Comment: yyDollar[1].stringItem,
			}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				Compression: yyDollar[1].stringItem,
			}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				Connection: yyDollar[1].stringItem,
			}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				DataDirectory: yyDollar[1].stringItem,
			}

		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				IndexDirectory: yyDollar[1].stringItem,
			}

		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				DelayKeyWrite: yyDollar[1].stringItem,
			}

		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				Encryption: yyDollar[1].stringItem,
			}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				Engine: yyDollar[1].stringItem,
			}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				EngineAttribute: yyDollar[1].stringItem,
			}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				InsertMethod: yyDollar[1].stringItem,
			}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				KeyBlockSize: yyDollar[1].stringItem,
			}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				MaxRows: yyDollar[1].stringItem,
			}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				MinRows: yyDollar[1].stringItem,
			}
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				PackKeys: yyDollar[1].stringItem,
			}
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				Password: yyDollar[1].stringItem,
			}
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				RowFormat: yyDollar[1].stringItem,
			}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				SecondaryEngineAttribute: yyDollar[1].stringItem,
			}
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				StatsAutoRecalc: yyDollar[1].stringItem,
			}
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				StatsPersistent: yyDollar[1].stringItem,
			}
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				StatsSamplePages: yyDollar[1].stringItem,
			}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				TableSpace:        yyDollar[1].stringList[0],
				TableSpaceStorage: yyDollar[1].stringList[1],
			}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = TableOptions{
				Union: yyDollar[1].stringList,
			}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[4].stringItem
		}
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[4].stringItem
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringList = []string{yyDollar[2].stringItem, yyDollar[3].stringItem}
		}
	case 232:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.stringItem = ""
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringList = yyDollar[3].stringList
		}
	case 236:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.item = PartitionConfig{}
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item
		}
	case 238:
		yyDollar = yyS[yypt-5 : yypt+1]
		{
			yyVAL.item = PartitionConfig{
				PartitionBy:          yyDollar[1].item.(PartitionBy),
				Partitions:           yyDollar[2].stringItem,
				SubpartitionBy:       yyDollar[3].item.(PartitionBy),
				Subpartitions:        yyDollar[4].stringItem,
				PartitionDefinitions: yyDollar[5].partitionDefinitionList,
			}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.item = yyDollar[3].item
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.item = yyDollar[3].item
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.item = yyDollar[3].item
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.item = yyDollar[3].item
		}
	case 243:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.stringItem = ""
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 246:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.item = PartitionBy{}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.item = yyDollar[3].item
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.item = yyDollar[3].item
		}
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.stringItem = ""
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 253:
		yyDollar = yyS[yypt-5 : yypt+1]
		{
			yyVAL.item = PartitionBy{
				Type:       "HASH",
				Expression: yyDollar[4].stringItem,
			}
		}
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.item = PartitionBy{
				Type:    "KEY",
				Columns: yyDollar[4].stringList,
			}
		}
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.item = PartitionBy{
				Type:       "RANGE",
				Expression: yyDollar[3].stringItem,
			}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.item = PartitionBy{
				Type:    "RANGE",
				Columns: yyDollar[3].stringList,
			}
		}
	case 257:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.item = PartitionBy{
				Type:       "LIST",
				Expression: yyDollar[3].stringItem,
			}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.item = PartitionBy{
				Type:    "LIST COLUMNS",
				Columns: yyDollar[3].stringList,
			}
		}
	case 259:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.item = ""
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.item = yyDollar[3].stringItem
		}
	case 262:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.partitionDefinitionList = []PartitionDefinition{}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.partitionDefinitionList = yyDollar[1].partitionDefinitionList
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.partitionDefinitionList = yyDollar[2].partitionDefinitionList
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.partitionDefinitionList = []PartitionDefinition{yyDollar[1].item.(PartitionDefinition)}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.partitionDefinitionList = append(yyDollar[1].partitionDefinitionList, yyDollar[3].item.(PartitionDefinition))
		}
	case 267:
		yyDollar = yyS[yypt-5 : yypt+1]
		{
			yyVAL.item = PartitionDefinition{
				Name:             yyDollar[2].stringItem,
				Operator:         yyDollar[3].stringList[0],
				ValueExpression:  yyDollar[3].stringList[1],
				PartitionOptions: yyDollar[4].item.(PartitionOptions),
				Subpartitions:    yyDollar[5].subpartitionDefinitionList,
			}
		}
	case 268:
		yyDollar = yyS[yypt-6 : yypt+1]
		{
			yyVAL.stringList = []string{"LESS THAN", yyDollar[5].stringItem}
		}
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
		{
			yyVAL.stringList = []string{"LESS THAN", "MAXVALUE"}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.stringList = []string{"LESS THAN", "MAXVALUE"}
		}
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		{
			yyVAL.stringList = []string{"IN", yyDollar[4].stringItem}
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.item = PartitionOptions{}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = yyDollar[1].item
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			// TODO: error handling
			merged := yyDollar[1].item.(PartitionOptions)
			mergo.Merge(&merged, yyDollar[2].item.(PartitionOptions))
			yyVAL.item = merged
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = PartitionOptions{
				Engine: yyDollar[1].stringItem,
			}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = PartitionOptions{
				Comment: yyDollar[1].stringItem,
			}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = PartitionOptions{
				DataDirectory: yyDollar[1].stringItem,
			}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = PartitionOptions{
				IndexDirectory: yyDollar[1].stringItem,
			}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = PartitionOptions{
				MaxRows: yyDollar[1].stringItem,
			}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = PartitionOptions{
				MinRows: yyDollar[1].stringItem,
			}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.item = PartitionOptions{
				TableSpace: yyDollar[1].stringItem,
			}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[3].stringItem
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[2].stringItem
		}
	case 284:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.subpartitionDefinitionList = []SubpartitionDefinition{}
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.subpartitionDefinitionList = yyDollar[1].subpartitionDefinitionList
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.subpartitionDefinitionList = yyDollar[2].subpartitionDefinitionList
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.subpartitionDefinitionList = []SubpartitionDefinition{yyDollar[1].item.(SubpartitionDefinition)}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.subpartitionDefinitionList = append(yyDollar[1].subpartitionDefinitionList, yyDollar[3].item.(SubpartitionDefinition))
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.item = SubpartitionDefinition{
				Name:             yyDollar[2].stringItem,
				PartitionOptions: yyDollar[3].item.(PartitionOptions),
			}
		}
	case 290:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.keyword = false
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.stringItem = ""
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "NOT"
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "NULL"
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "TRUE"
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "FALSE"
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "0x" + yyDollar[1].token.Literal[2:len(yyDollar[1].token.Literal)-1]
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "0b" + yyDollar[1].token.Literal[1:len(yyDollar[1].token.Literal)-1]
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[2].token.Literal
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.stringItem = ""
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringList = []string{yyDollar[1].stringItem}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringList = append(yyDollar[1].stringList, yyDollar[3].stringItem)
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringList = yyDollar[2].stringList
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Submatches[0]
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringList = []string{yyDollar[1].stringItem}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringList = append(yyDollar[1].stringList, yyDollar[3].stringItem)
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringList = yyDollar[2].stringList
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.stringList = []string{}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringList = yyDollar[1].stringList
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringList = yyDollar[2].stringList
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringList = []string{yyDollar[1].stringItem}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringList = append(yyDollar[1].stringList, yyDollar[3].stringItem)
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("%s AND %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("%s OR %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("%s XOR %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("NOT %s", yyDollar[2].stringItem)
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.stringItem = compactJoin([]string{yyDollar[1].stringItem, "IS", yyDollar[3].stringItem, yyDollar[4].stringItem}, " ")
		}
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.stringItem = compactJoin([]string{yyDollar[1].stringItem, "IS", yyDollar[3].stringItem, "UNKNOWN"}, " ")
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].token.Literal
		}
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.stringItem = compactJoin([]string{yyDollar[1].stringItem, yyDollar[2].token.Literal, yyDollar[3].stringItem, yyDollar[4].token.Literal}, " ")
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = compactJoin([]string{yyDollar[1].stringItem, yyDollar[2].stringItem, yyDollar[3].stringItem}, " ")
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			expressions := fmt.Sprintf("(%s)", strings.Join(yyDollar[4].stringList, ", "))
			yyVAL.stringItem = compactJoin([]string{yyDollar[1].stringItem, yyDollar[2].stringItem, "IN", expressions}, " ")
		}
	case 357:
		yyDollar = yyS[yypt-6 : yypt+1]
		{
			yyVAL.stringItem = compactJoin([]string{yyDollar[1].stringItem, yyDollar[2].stringItem, "BETWEEN", yyDollar[4].stringItem, "AND", yyDollar[6].stringItem}, " ")
		}
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.stringItem = compactJoin([]string{yyDollar[1].stringItem, "SOUNDS", "LIKE", yyDollar[4].stringItem}, " ")
		}
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.stringItem = compactJoin([]string{yyDollar[1].stringItem, yyDollar[2].stringItem, "LIKE", yyDollar[4].stringItem}, " ")
		}
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.stringItem = compactJoin([]string{yyDollar[1].stringItem, yyDollar[2].stringItem, "REGEXP", yyDollar[4].stringItem}, " ")
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("%s | %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("%s & %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("%s << %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("%s >> %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("%s + %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("%s - %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("%s * %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("%s / %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("%s %% %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("%s ^ %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("%s + %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("%s - %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("`%s`", yyDollar[1].stringItem)
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("%s COLLATE %s", yyDollar[1].stringItem, yyDollar[3].stringItem)
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "?"
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("+ %s", yyDollar[2].stringItem)
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("- %s", yyDollar[2].stringItem)
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("~ %s", yyDollar[2].stringItem)
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("! %s", yyDollar[2].stringItem)
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("BINARY %s", yyDollar[2].stringItem)
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("(%s)", strings.Join(yyDollar[1].stringList, ", "))
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			expressions := fmt.Sprintf("(%s)", strings.Join(yyDollar[2].stringList, ", "))
			yyVAL.stringItem = fmt.Sprintf("ROW %s", expressions)
		}
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			ident := fmt.Sprintf("`%s`", yyDollar[2].stringItem)
			yyVAL.stringItem = fmt.Sprintf("{%s %s}", ident, yyDollar[3].stringItem)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 392:
		yyDollar = yyS[yypt-7 : yypt+1]
		{
			idents := fmt.Sprintf("(%s)", JoinS(yyDollar[2].stringList, ", ", "`"))
			against := fmt.Sprintf("(%s)", compactJoin([]string{yyDollar[5].stringItem, yyDollar[6].stringItem}, " "))
			yyVAL.stringItem = compactJoin([]string{"MATCH", idents, "AGAINST", against}, " ")
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.stringItem = ""
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 395:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.stringItem = "IN NATURAL LANGUAGE MODE"
		}
	case 396:
		yyDollar = yyS[yypt-7 : yypt+1]
		{
			yyVAL.stringItem = "IN NATURAL LANGUAGE MODE WITH QUERY EXPANSION"
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = "IN BOOLEAN MODE"
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = "WITH QUERY EXPANSION"
		}
	case 399:
		yyDollar = yyS[yypt-5 : yypt+1]
		{
			yyVAL.stringItem = compactJoin([]string{"CASE", yyDollar[2].stringItem, yyDollar[3].stringItem, yyDollar[4].stringItem, "END"}, " ")
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("%s %s", yyDollar[1].stringItem, yyDollar[2].stringItem)
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.stringItem = ""
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("ELSE %s", yyDollar[2].stringItem)
		}
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("WHEN %s THEN %s", yyDollar[2].stringItem, yyDollar[4].stringItem)
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.stringItem = compactJoin([]string{"INTERVAL", yyDollar[2].stringItem, yyDollar[3].stringItem}, " ")
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "MICROSECOND"
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "SECOND"
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "MINUTE"
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "HOUR"
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "DAY"
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "WEEK"
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "MONTH"
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "QUARTER"
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "YEAR"
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "SECOND_MICROSECOND"
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "MINUTE_MICROSECOND"
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "MINUTE_SECOND"
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "HOUR_MICROSECOND"
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "HOUR_SECOND"
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "HOUR_MINUTE"
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "DAY_MICROSECOND"
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "DAY_SECOND"
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "DAY_MINUTE"
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "DAY_HOUR"
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "YEAR_MONTH"
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("%s(%s)", yyDollar[1].stringItem, strings.Join(yyDollar[3].stringList, ","))
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = yyDollar[1].stringItem
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = compactJoin([]string{yyDollar[1].stringItem, yyDollar[2].stringItem}, "")
		}
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.stringItem = ""
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.stringItem = "()"
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "chaeset"
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "date"
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "database"
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "default"
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "year"
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "month"
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "week"
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "day"
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "hour"
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "minute"
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "second"
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "microsecond"
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "if"
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "interval"
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "time"
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "timestamp"
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "CURRENT_UESR"
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "CURRENT_DATE"
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "CURRENT_ROLE"
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "UTC_DATE"
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "CURRENT_TIME"
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "CURRENT_TIMESTAMP"
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "LOCALTIME"
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "LOCALTIMESTAMP"
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "UTC_TIME"
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.stringItem = "UTC_TIMESTAMP"
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		{
			yyVAL.stringItem = fmt.Sprintf("%s(%s)", strings.ToLower(yyDollar[1].stringItem), strings.Join(yyDollar[3].stringList, ","))
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.keyword = false
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.keyword = false
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = false
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.keyword = false
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.keyword = false
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
		{
			yyVAL.keyword = false
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
		{
			yyVAL.keyword = true
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		{
			yyVAL.keyword = true
		}
	}
	goto yystack /* stack new state and value */
}
